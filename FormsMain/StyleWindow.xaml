<Window x:Class="FormsMain.StyleWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:FormsMain"
        xmlns:convs="clr-namespace:Foundation.Converters;assembly=Foundation"
        mc:Ignorable="d"
        Title="StyleWindow" Height="450" Width="800"
        d:DataContext="{d:DesignInstance Type=local:MainViewModel}">

    <Window.Resources>

        <convs:NameConverter x:Key="NameConverter"/>
        <convs:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter"/>

        <Style TargetType="{x:Type Button}">
            <Setter Property="Width" Value="100"/>
            <Setter Property="Height" Value="40"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Background" Value="#555555"/>
            <Setter Property="BorderBrush" Value="#151515"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Foreground" Value="Yellow"/>
            <Setter Property="FontSize" Value="20"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="bd"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}"
                                Padding="10 6">
                            <ContentPresenter HorizontalAlignment="Center" 
                                              VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#cccccc"/>
                                <Setter TargetName="bd" Property="CornerRadius" Value="10"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="Yellow"/>
                                <Setter Property="Foreground" Value="Red"/>
                                <Setter TargetName="bd" Property="CornerRadius" Value="20"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <Style TargetType="{x:Type TextBlock}">
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="FontSize" Value="40"/>
        </Style>

        <Style TargetType="{x:Type CheckBox}">
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>

        <Style TargetType="{x:Type ToggleButton}">
            <Setter Property="Content" Value="TEST"/>
            <Setter Property="FontSize" Value="20"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Blue"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border Background="{TemplateBinding Background}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <CheckBox Grid.Column="0" Margin="0 0 10 0" IsChecked="{Binding RelativeSource={RelativeSource AncestorType=ToggleButton}, Path=IsChecked}"/>
                                <TextBlock Grid.Column="1" Text="{TemplateBinding Content}"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="Background" Value="#cccccc"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        
    </Window.Resources>
    
    <Grid>
        <StackPanel>
            <Button x:Name="btn1" Content="{Binding Name, Converter={StaticResource NameConverter}}"/>
            <TextBlock Text="{Binding IsChecked}"/>
            <CheckBox IsChecked="{Binding IsChecked}"/>
            <Button Content="버튼1" Visibility="{Binding IsChecked, Converter={StaticResource BoolToVisibilityConverter}}"/>
            <TextBlock Text="{Binding ElementName=btn1}"/>
            <TextBlock Text="{Binding ElementName=btn1, Path=ActualHeight}"/>
            <TextBlock Text="{Binding ElementName=btn1, Path=ActualWidth}"/>
            <ToggleButton Content="토글버튼1" />
        </StackPanel>
    </Grid>
</Window>
